:root {
  --justify-content-field-opponentStation: flex-end;
  --player-cards-on-hand-offset: 0px;
  --top-spacing: 0px;
  --mobileOnPortrait:0;
  }


// These values works perfect for smaller resolutions such as 1600x900
// Station cards of enemy does not disappear in Chrome
:root {
 --card-width: 538px;
 --card-height: 750px;
 --z-position: -40px;
 --z-position-adjust: 1;
 --x-rotate-adjust: 18deg;
 --gui-height-adjust: 48%;
 --space-between-GUI-n-draw-pile: 40px;
 --player-zone-row-width: 50%;
 --player-station-row-width: 18%;
}

@media (min-height:910px) {
  :root {
    --card-width: 624px;
    --card-height: 870px;
    }
}

// Works perfect for bigger resolutions such as 1680x1050, 1920x1080 etc
@media (min-width: 1610px) {
  :root {
    --card-width: 652px;
    --card-height: 910px;
    --z-position: 0px;
    --z-position-adjust: 4;
    --x-rotate-adjust: 15deg;
    --gui-height-adjust: 50%;
    --space-between-GUI-n-draw-pile: 0px;
    --player-zone-row-width: 60%;
    --player-station-row-width: 20%;
    }
}


// 1920 x 1080 -> 19:6
// 1366 x 768 -> 16:9
// 1280 x 800 -> 16:9
// 1024 x 768 -> 4:3
// 736 x 414
// 568 x 320

// 800x1280
// 768x1024

@media only screen and (min-device-width: 320px) 
                   and (max-device-width: 850px) 
                   and (orientation: portrait) {
.opponentStationCards{
  padding-bottom: 3rem;
}
.match-wrapper {
  transform: rotate(-90deg);
    transform-origin: left top;
    width: 100vh;
    height: 100vw;
    overflow-x: hidden;
    position: absolute;
    top: 100%;
    left: 0;
}

.matchHeader-banner {
  display: grid;
  height: auto;
}
.matchHeader-bannerName {
  display: grid;
  margin: auto;
}

.matchHeader-bannerBarsWrapper {
  display: grid;
}





.matchHeader-bannerClockText{
  margin: auto;
}
.mobileOnPortrait {
  display: block;
}
}

@media only screen and (min-device-width: 320px) 
                    and (max-device-width: 767px) 
                    and (orientation: landscape) {

.matchHeader-banner {
  display: grid;
  height: auto;
}
.matchHeader-bannerName {
  display: grid;
  margin: auto;
}

.matchHeader-bannerBarsWrapper {
  display: grid;
}
.matchHeader-bannerClockText{
  margin: auto;
}

.mobileOnPortrait {
  display: none;
}
}

$cardWidth: var(--card-width);
$cardHeight: var(--card-height);

$actualCardWidth: 287px;
$actualCardHeight: 400px;
$expandedCardWidth: $actualCardWidth * 1.32;
$expandedCardHeight: $actualCardHeight * 1.32;
$cardOnHandBlowUpWidth: $actualCardWidth * 1.2;
$cardOnHandBlowUpHeight: $actualCardHeight * 1.2;

$opponentHandScale: 0.65;
$opponentDiscardAndDrawPileScale: 0.9;

$opponentStationScale: .68;
$playerStationScale: .68;

$scaledCardWidth: calc(#{var(--card-width)} * 0.2);
$scaledCardHeight: calc(#{$cardHeight} * 0.2);

$playerCardOnHandWidth: $scaledCardWidth;
$playerCardOnHandHeight: $scaledCardHeight;
$playerStationCardWidth: calc(#{$scaledCardWidth} * #{$playerStationScale});
$playerStationCardHeight: calc(#{$scaledCardHeight} * #{$playerStationScale});
$playerDiscardPileCardWidth: $scaledCardWidth;
$playerDiscardPileCardHeight: $scaledCardHeight;
$playerDrawPileCardWidth: $scaledCardWidth;
$playerDrawPileCardHeight: $scaledCardHeight;

$opponentCardWidth: $scaledCardWidth;
$opponentCardHeight: $scaledCardHeight;
$opponentZoneCardWidth: $scaledCardWidth;
$opponentZoneCardHeight: $scaledCardHeight;
$opponentCardOnHandWidth: calc(#{$scaledCardWidth} * #{$opponentHandScale});
$opponentCardOnHandHeight: calc(#{$scaledCardHeight} * #{$opponentHandScale});
$opponentStationCardWidth: calc(#{$scaledCardWidth} * #{$opponentStationScale});
$opponentStationCardHeight: calc(#{$scaledCardHeight} * #{$opponentStationScale});
$opponentDiscardPileCardWidth: calc(
  #{$scaledCardWidth} * #{$opponentDiscardAndDrawPileScale}
);
$opponentDiscardPileCardHeight: calc(
  #{$scaledCardHeight} * #{$opponentDiscardAndDrawPileScale}
);
$opponentDrawPileCardWidth: calc(
  #{$scaledCardWidth} * #{$opponentDiscardAndDrawPileScale}
);
$opponentDrawPileCardHeight: calc(
  #{$scaledCardHeight} * #{$opponentDiscardAndDrawPileScale}
);

$commanderCardWidth: calc(#{$cardWidth} / 2.8);
$commanderCardHeight: calc(#{$cardHeight} / 2.8);

$cardHoverWidth: calc(#{$cardWidth} / 2.8);
$cardHoverHeight: calc(#{$cardHeight} / 2.8);

$cardGhostZIndex: 2;
$cardGhostWidth: $scaledCardWidth;
$cardGhostHeight: $scaledCardHeight;
$playerCardsOnHandZIndex: 3;
$holdingCardZIndex: 4;

@supports (--custom:property) {
  [style*="--aspect-ratio"] {
    position: relative;
  }
  [style*="--aspect-ratio"]::before {
    content: "";
    display: block;
    padding-bottom: calc(100% / (var(--aspect-ratio)));
  }  
  [style*="--aspect-ratio"] > :first-child {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
  }  
}
::-webkit-scrollbar {
  width: 0.4rem;
  height: 0.4rem;
 }
 ::-webkit-scrollbar-thumb {
  background: #999C;  
  border-radius: 10px;
 }
 ::-webkit-scrollbar-thumb:hover{
 background: radial-gradient(circle, #99999c 25%,#a5abd4 50%);
 }
 ::-webkit-scrollbar-track{
  background: rgba($color: #000000, $alpha: 0);
  border-radius: 10px;
  box-shadow: inset 7px 10px 12px rgba($color: #000000, $alpha: 0);
 }


// Phones in landscape mode, by Jim 2021-03-08
@media (max-height: 700px) and (orientation: landscape) {
  :root {
   --card-width: 466px;
   --card-height: 650px;
   --z-position: -9px !important;
   --x-rotate-adjust: 16deg !important;
   --player-zone-row-width: 50%;
   --space-between-GUI-n-draw-pile: -10px !important;
   --z-position-adjust: 0;
   --player-cards-on-hand-offset: 27px;
   }
   .matchHeader-banner {height:24px;}
   .matchHeader-bannerName {font-size:15px;}
   .matchHeader-bannerBarsWrapper {display:none;}
  $commanderCardWidth: calc(#{$cardWidth} / 5);
  $commanderCardHeight: calc(#{$cardHeight} / 5);
}




