@import "miscVariables";
@import "cardVariables";
@import "colors";

$durationCardsMarginToOtherCards: 35px;


.card {
  width: $scaledCardWidth;
  height: $scaledCardHeight;
  display: flex;
  flex-direction: column;
  background-size: 100% 100%;
  box-sizing: border-box;
  -webkit-user-select: none;
  user-select: none;

  &--turnedAround {
    transform: rotate(180deg);
  }
}

.field-opponent .card {
  width: $opponentZoneCardWidth;
  height: $opponentZoneCardHeight;
}

.card-faceDown {
  position: relative;
  overflow: hidden;
  background-color: transparent;

  &::before {
    content: "";
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
    background-image: url(https://images.thespacewar.com/back-image.png);
    background-size: cover;

    .field-opponent & {
      transform: rotate(180deg);
    }

    .opponentCardsOnHand & {
      transform: rotate(180deg);
    }
  }

  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  .field-opponent &::after,
  .opponentCardsOnHand &::after {
    background-color: rgba(53, 167, 255, .3);
  }

  .field-player &::after,
  .playerCardsOnHand &::after,
  &.card-faceDown--player::after {
    background-color: rgba(255, 0, 0, 0.25);
  }
}

.card-placeholder {
  background: none;
  border-color: transparent;
  position: relative;
}

.card-ghost {
  width: $cardGhostWidth;
  height: $cardGhostHeight;
  border: 4px solid $homeZoneCardGhost-borderColor;
  background: transparent;
  z-index: $cardGhostZIndex;
  position: relative;

  &--leftAbsolute {
    position: absolute;
    left: 100%;
  }

  &--hoveredOver, &:hover {
    background: $homeZoneCardGhost-hoverBackgroundColor;
  }
}

.card-ghost.card-ghost--deactivatedZone {
  border: 4px solid $dangerBorderColor;
  background: rgba(230, 138, 138, .2);
  opacity: 0;

  &:hover {
    transition: opacity .15s ease-out;
    opacity: 1;
  }
}

.card-ghost--zone {
  position: absolute;
  width: auto;
  height: calc(#{$scaledCardHeight} * 1.1);
  top: calc(#{$scaledCardHeight} * -.05);
  left: 10px;
  right: 10px;
  padding: 0;
}

.playerEventCardGhost {
  position: absolute;
  top: 45%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  z-index: 2;
  height: calc(#{$scaledCardHeight} * .6);
  box-sizing: border-box;
  $color: rgb(18, 18, 18);
  background: radial-gradient(circle, rgba($color, 0.85) 0%, rgba($color, 0.75) 21%, rgba($color, 0.60) 65%, rgba($color, 0.40) 100%);

  &--hoveredOver, &:hover {
    border-top: 4px solid #8ae68a;
    border-bottom: 4px solid #8ae68a;
    $color: #162e16;
    background: radial-gradient(circle, rgba($color, 0.85) 0%, rgba($color, 0.75) 21%, rgba($color, 0.60) 65%, rgba($color, 0.40) 100%);
  }
}

.playerEventCardGhost.playerEventCardGhost--deactivated {
  border-top: 4px solid $dangerBorderColor;
  border-bottom: 4px solid $dangerBorderColor;

  background: rgba(124, 75, 75, 0.2);
  color: white;
  opacity: .5;
  transition: opacity 0s;

  &:hover {
    border-top: 4px solid $dangerBorderColor;
    border-bottom: 4px solid $dangerBorderColor;

    background: rgba(108, 65, 65, 0.2);
    opacity: 1;
  }
}

.card.card--expandable {
  &:active:hover {
    transition: transform .35s cubic-bezier(0.99, 0.05, 0.795, 0.035) !important;
    transform: scale(1.1);
  }

  &.card--turnedAround:active:hover {
    transform: rotate(180deg) scale(1.1) !important;
  }
}

.playerCardsInZone .card.card-lastDurationCard {
  margin-right: $durationCardsMarginToOtherCards;
}

.opponentCardsInZone .card.card-lastDurationCard {
  margin-left: $durationCardsMarginToOtherCards;
}

.card:not(.card-faceDown):not(.card-ghost):hover {
  cursor: pointer;
}

.actionOverlays {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
}

.actionOverlays {
  z-index: 2;

  * {
    visibility: hidden;
  }

  &:hover * {
    visibility: visible;
  }
}

.attackable,
.movable,
.actionOverlay--normal,
.selectable,
.selectForRepair {
  color: white;
  font-family: Helvetica, sans-serif;
  font-size: 16px;
  flex: 1 1;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  opacity: .5;
  cursor: pointer;

  &:hover {
    opacity: 1;
  }
}

.attackable,
.selectable {
  background-color: rgba(255, 100, 100, .5);
}

.selectForRepair {
  background-color: rgba(100, 100, 255, .5);
}

.movable {
  background-color: rgba(0, 0, 0, .4);
}

.actionOverlay--normal {
  background-color: rgba(0, 0, 0, .4);
}

.card.card-faceDown.selected--danger {
  outline: 3px solid red;
}

.selectable--turnedAround {
  transform: rotate(180deg);
}

.cardDisabledOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  pointer-events: none;
  -webkit-font-smoothing: antialiased;

  .cardDisabledOverlay-text {
    font-family: "Space mono", sans-serif;
    color: rgba(255, 0, 0, 0.6);
    position: relative;
    bottom: 2px;
  }
}

.actionOverlays,
.indicatorOverlays {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
}

.actionOverlays {
  z-index: 2;

  &:hover {
    & .actionOverlay {
      visibility: visible;
    }
  }
}

.actionOverlay {
  color: white;
  font-family: Helvetica, sans-serif;
  font-size: 16px;
  flex: 1 1;
  display: flex;
  align-items: center;
  justify-content: center;
  visibility: hidden;
  opacity: .5;
  cursor: pointer;

  &:hover {
    opacity: 1;
  }

  &--hinted {
    opacity: .2;
    visibility: visible;
  }
}

.card--upsideDown:not(.paralyzed) {
  .indicatorOverlays {
    transform: rotate(180deg);
  }
}

.indicatorOverlays {
  box-sizing: border-box;
  padding: 10% 10% 0 0;
}

.card-damageIndicatorWrapper,
.card-attackBoostIndicatorWrapper {
  width: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.card-damageIndicator,
.card-attackBoostIndicator {
  display: flex;
  align-items: center;

  font-weight: bold;
  font-family: "Helvetica Nueue", sans-serif;

  color: #ff1a1a;
  text-shadow: 0 0 10px rgb(0, 0, 0);
}

//Decrease card contrast to make cards look more realistic
.card,
.cardHoverBlowUp,
.cardHoverActivator,
.expandedCard-image {
  filter: contrast(90%);
}
