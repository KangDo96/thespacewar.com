@import "cardVariables";
@import "miscVariables";

.field-playerStation {
  position: relative;
  flex-direction: column;
  margin-right: 12px;
  margin-top: 8px;
  display: flex;
  align-items: flex-start;
  flex: 0 0 auto;
  z-index: 2;
  padding-bottom: 40px; /* To accommodate for the GUI element present beneath the station */
  margin-left: 46px; /* To accommodate for the GUI element present to the left of the station */

  .card {
    width: $playerStationCardWidth;
    height: $playerStationCardHeight;

    margin-right: 8px;

    &:last-child {
      margin-right: 0;
    }
  }
}

.field-opponentStation {
  flex-direction: column;
  margin-left: 8px;
  margin-bottom: 10px;
  transform: rotate(180deg);
  justify-content: flex-end;
  display: flex;
  flex: 1 1;
  min-width: 20%;
  max-width: 20%;
  width: 20%;

  .card {
    width: $opponentStationCardWidth;
    height: $opponentStationCardHeight;
    margin-left: 8px;

    &:last-child {
      margin-left: 0;
    }
  }
}

.stationCardWrapper {
  flex: 0 1 auto;
  min-width: 30px;
  max-width: 30px;
  position: relative;

  &--fullSize {
    flex: 0 0 auto;
    max-width: inherit;
  }

  .card-ghost {
    position: absolute;
    top: 0;
    z-index: 2;
    transform: translateZ(1px);
  }
  
}

.field-player .stationCardWrapper {
  width: $playerStationCardWidth;
  height: $playerStationCardHeight;
}

.field-opponent .stationCardWrapper {
  width: $opponentStationCardWidth;
  height: $opponentStationCardHeight;
}

.stationCard--flipped {
  /* WORKAROUND? Needed to be able to click on actionOverlays without getting weird behaviour were click falls through to card below */
  position: relative;
  z-index: 2;
  /* */
}

.field-station .card {
  flex: 0 0 auto;
}

.field-playerStation .field-stationRow {
  padding-top: 16px;
  padding-bottom: 8px;
}

.field-stationRow {
  position: relative;
  display: flex;
  padding-bottom: 8px;
  &:hover {
    max-width: 30px !important;
    min-width: 30px !important;
    width: 30px !important;
  }
  &:hover > .couldBeZoomIn:hover{
    max-width: fit-content;
    min-width: fit-content;
    transform: translateZ(2px);
  }
}